// const num = 500;

// if( num > 1 && num < 10){
//     console.log('yes')
// }

// const star = "*";
// let result = "";

// for (let i = 1; i <= 8; i++) {
//   for (let j = 1; j <= i; j++) {
//     result += star;
//   }
//   result += '\n'
// }
// console.log(result);

// let i = 2;
// while (i <= 16) {
//   if (i % 2 === 0) {
//     i++;
//     continue;
//   } else {
//     console.log(i);
//   }
//   i++;
// }

// function firstTask() {
//   // Значения массива менять нельзя, тут он проверяется автоматически именно на эти значения
//   const arr = [3, 5, 8, 16, 20, 23, 50];
//   const result = [];
//   console.log(arr.length)
//   // Пишем решение вот тут
//   for (let i = 0; i < arr.length; i++) {
//     result[i] = arr[i]
//     console.log(result[i])

//   }

//   // Не трогаем
//   return result;
// }
// firstTask()

// function secondTask() {
//   // Значения массива менять нельзя, тут он проверяется автоматически именно на эти значения
//   const data = [5, 10, "Shopping", 20, "Homework"];

//   // Пишем решение вот тут
//   for (let i = 0; i < data.length; i++) {
//     if(typeof data[i] === 'number'){
//         console.log(data[i]*2)
//     }else if(typeof data[i] === 'string'){
//         console.log(data[i] + " - done")
//     }else{
//         console.log('Такой тип данных пока не знаю')
//     }
//   }
//   // Не трогаем
//   return data;
// }

// secondTask()

// function thirdTask() {
//   // Значения массива менять нельзя, тут он проверяется автоматически именно на эти значения
//   const data = [5, 10, "Shopping", 20, "Homework"];
//   const result = [];

//   // Пишем решение вот тут
//   for (let i = 0; i < data.length; i++) {
//     result[i] = data[data.length - 1 - i];
//     console.log(`${i} ${result} ${data[i]}`);
//   }

//   // Не трогаем
//   return result;
// }

// console.log(thirdTask());

// const lines = 5;
// let result = "";
// Проверяется именно переменная result, формируйте строку в ней

/*
1) Создайте функцию, которая будет на вход принимать 1 аргумент с именем человека и возвращать строку.
Пример: вызов функции sayHello('Антон') возвращает строку "Привет, Антон!". В решении вызывать функцию не нужно, 
программа сделает это за вас.
P.S. возвращать - это использовать ключевое слово return.
P.S.S. Это классическая функция-модификатор, которых мы дальше по курсу будем создавать еще много в разных видах.
*/

function sayHello(name) {
  return `Привет, ${name}!`;
}

// console.log(sayHello('Abylay'));

/*
2) Создайте функцию, которая принимает в себя 1 аргумент в виде целого числа и возвращает массив из трех чисел:
 одно на 1 меньше, сам аргумент, и число на 1 больше.
Пример: вызов функции returnNeighboringNumbers(5) возвращает массив в виде [4, 5, 6].
*/

function returnNeighboringNumbers(n) {
  let res = [n - 1, n, n + 1];
  return res;
}

/*
3) Создайте функцию, которая будет принимать в себя 2 аргумента, оба числа. Первое число - это база,
 второе число - это сколько раз нужно будет повторить это число в прогрессии. (Смотри пример ниже). 
 Функция должна возвращать строку (или число в особых случаях, о которых ниже), где эти числа идут по порядку,
  разделенные тремя дефисами "---". После последнего числа их не должно быть.
Если второй аргумент не является числом, равен или меньше нуля - то возвращать просто первый аргумент. 
(Проверяем через оператор typeof)
Примеры:
Вызов функции getMathResult(5, 3) даст ответ 5---10---15
Вызов функции getMathResult(3, 10) даст ответ 3---6---9---12---15---18---21---24---27---30
Вызов функции getMathResult(10, 5) даст ответ 10---20---30---40---50
Вызов функции getMathResult(10, '5') даст ответ 10
Вызов функции getMathResult(10, 0) даст ответ 10
Вызов функции getMathResult(20, -5) даст ответ 20
Эта задача уже ближе к реальности, когда вам нужно учитывать и тип данных у аргументов, 
проверять их и продумывать логику работы внутри. Обратите внимание на прогрессию,
она рассчитывается по простой формуле умножения. Если первый аргумент 5,
а второй 3, то число повторяется 3 раза, каждый раз увеличиваясь на само себя.
Это базовая математика, которая и нужна для работы в 95% случае на фронтенде.
*/

function getMathResult(num, factor) {
  let res = "";
  let plus = "---";
  if (typeof factor === "number" && factor !== 0) {
    for (let i = 1; i <= factor; i++) {
      if (factor !== i) {
        res += num * i + plus;
      } else {
        res += num * i;
        return res;
      }
    }
  } else {
    console.log(typeof num);
    return num;
  }
}

console.log(getMathResult(5, 0));
